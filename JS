// executa assim que a página terminar de carregar
(function() {
    
    var listaFuncionarios = [];
    
    function salvar(){
        var funcionarios = {};
    
        funcionarios.nome =$("#nomeFuncionario").val();
        funcionarios.cpf = $("#cpfFuncionario").val();
        funcionarios.rg = $("#rgFuncionario").val();
        funcionarios.idade = $("#idadeFuncionario").val();
        funcionarios.telefone = $("#telefoneFuncionario").val();
        funcionarios.endereco = $("#enderecoFuncionario").val();
        funcionarios.titulo = $("#tituloFuncionario").val();

        let id = $("#id").val();
    
        // não tenho código = criar novo
        if(id == undefined || id == ''){
            funcionarios.id = new Date().getTime();
            listaFuncionarios.push(funcionarios);
        } else { // se tenho id, estou editando
            let idNumber = parseInt(id);
            let funcionariosExixtentes = findFuncionariosById(idNumber);
            
            if(funcionariosExixtentes){
                funcionariosExixtentes.nomeFuncionarios = funcionarios.nomeFuncionarios;
                funcionariosExixtentes.cpfFuncionarios = funcionarios.cpfFuncionarios;
                funcionariosExixtentes.rgFuncionarios = funcionarios.rgFuncionarios;
                funcionariosExixtentes.idadeFuncionarios = funcionarios.idadeFuncionarios;
                funcionariosExixtentes.telefoneFuncionarios = funcionarios.telefoneFuncionarios;
                funcionariosExixtentes.enderecoFuncionarios = funcionarios.enderecoFuncionarios;
                funcionariosExixtentes.tituloFuncionarios = funcionarios.tituloFuncionarios;
            }
        }
    
        gravaNoLocalStorage();
        renderiza();
        zerarInputs();
    
        return false;
    }
    
    function renderiza(){
        // busco o tbody com o id
        const tbody = $("#corpo-tabela-funcionarios");
    
        // zerando o conteúdo da tabela
        tbody.html('');
    
        for(let i=0; i<listaFuncionarios.length; i++){
            // Busco a pessoa da lista
            const funcionarios = listaFuncionarios[i];
    
            // cria um elemento html do tipo tr
            // table row - linha da tabela
            let tr = $('<tr>');
    
            // cria um elemento html do tipo td
            // table data - dado da tabela
            let tdnomeFuncionarios = $('<td>').text(funcionarios.nome);
            let tdcpfFuncionarios = $('<td>').text(funcionarios.cpf);
            let tdrgFuncionarios = $('<td>').text(funcionarios.rg);
            let tdidadeFuncionarios = $('<td>').text(funcionarios.idade);
            let tdenderecoFuncionarios = $('<td>').text(funcionarios.endereco);
            let tdtituloEleitor = $('<td>').text(funcionarios.titulo);
            let tdtelefoneFuncionarios = $('<td>').text(funcionarios.telefone);
            let tdOpcoes = $('<td>');
    
            let btnEditar = $('button').text('Editar');
            let btnExcluir = $('button').text('Excluir');
            
            // associa o click a uma function
            btnEditar.click(function(){ 
                editar(funcionarios.id); 
            });
    
            // associa o click a uma function
            btnExcluir.click(function(){ 
                excluir(funcionarios.id); 
            });
            
            tdOpcoes.append(btnEditar).append(btnExcluir);
    
            // adiciono os td dentro do tr
            // na order a ser exibida
            tr.append(tdnomeFuncionarios)
                .append(tdcpfFuncionarios)
                .append(tdrgFuncionarios)
                .append(tdidadeFuncionarios)
                .append(tdenderecoFuncionarios)
                .append(tdtituloEleitor)
                .append(tdtelefoneFuncionarios)
                .append(tbOpcoes);
    
            // adiciona o tr no tbody
            tbody.append(tr);
        }
    }
    
    function editar(id){
       let funcionarios = findFuncionariosById(id);
    
        if(funcionarios){
            $("#nome").val(funcionarios.nomeFuncionarios);
            $("#cpf").val(funcionarios.cpfFuncionarios);
            $("#rg").val(funcionarios.rgFuncionarios);
            $("#idade").val(funcionarios.idadeFuncionarios);
            $("#endereco").val(funcionarios.enderecoFuncionarios);
            $("#tituloEleitor").val(funcionarios.tituloEleitor);
            $("#telefoneFuncionario").val(funcionarios.telefoneFuncionarios);
            $("#id").val(funcionarios.id);

        }else{
            alert('Não foi possível encontrar o funcionário');
        }
    }
    
    
    function excluir(id){
        listaFuncionarios = listaFuncionarios
            .filter(function(value){
                return value.id != id;
            });
    
        gravaNoLocalStorage();
        renderiza();
    }
    
    function findFuncionariosById(id){
        let funcionarios = listaFuncionarios
            .filter(function(value){
                return value.id == id;
            });
        
        if(funcionarios.length == 0){
            return undefined;
        }else{
            return funcionarios[0];
        }
    }
    
    function zerarInputs(){
        $('formulario input').val('');
    }
    
    function gravaNoLocalStorage(){
        // convertendo a lista em string no formato JSON
        const listaEmJSON = JSON.stringify(listaFuncionarios);
    
        // gravando no localStorage
        localStorage.setItem("lista", listaEmJSON);
    }
    
    function buscaDoLocalStorage(){
        // busca do local storage
        const listaStorage = localStorage.getItem("lista");
    
        // converte para lista e atribui
        listaFuncionarios = JSON.parse(listaStorage) || [];
    }
    
        // o que se deseja executar
        buscaDoLocalStorage();
        renderiza();
    
        $("#formularios").on("submit", function(evt){
                salvar();
                // corta a linha de execucao
                evt.stopPropagation(); 
    
                // previne o comportamento padrão
                evt.preventDefault();
            });
        
        // busco todos os inputs
        $('input, select').each(function(index, element){
         
            element.oninvalid = function(){
                const msg = $(this).data('custom-message');
    
                if(msg){
                    // remove mensagens de erro antigas
                    this.setCustomValidity("");
    
                    // executa novamente a validação
                    if (!this.validity.valid) {
                        // se inválido, coloca mensagem de erro customizada
                        this.setCustomValidity(msg);
                    }   
                }
            }
        });
        
    
})();
